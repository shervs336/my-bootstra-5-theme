import   "c816f4769585e5eb4cd9e1196fbe83c1:./instanceOf.js";
function $c816f4769585e5eb4cd9e1196fbe83c1$export$9099ad97b570f7c(parent, child) {
    var rootNode = child.getRootNode && child.getRootNode(); // First, attempt with faster native method
    if (parent.contains(child)) return true;
    else if (rootNode && $c816f4769585e5eb4cd9e1196fbe83c1$import$2b619be5b27ce3d0$e8660f0e392f8a6e(rootNode)) {
        var next = child;
        do {
            if (next && parent.isSameNode(next)) return true;
             // $FlowFixMe[prop-missing]: need a better way to handle this...
            next = next.parentNode || next.host;
        }while (next)
    } // Give up, the result is false
    return false;
}
