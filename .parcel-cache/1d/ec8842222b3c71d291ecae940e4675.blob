import   "0a320674d802796c8732e3fc8d5b7771:./getWindow.js";
import   "0a320674d802796c8732e3fc8d5b7771:./getNodeName.js";
import   "0a320674d802796c8732e3fc8d5b7771:./getComputedStyle.js";
import   "0a320674d802796c8732e3fc8d5b7771:./instanceOf.js";
import   "0a320674d802796c8732e3fc8d5b7771:./isTableElement.js";
import   "0a320674d802796c8732e3fc8d5b7771:./getParentNode.js";
function $0a320674d802796c8732e3fc8d5b7771$var$getTrueOffsetParent(element) {
    if (!$0a320674d802796c8732e3fc8d5b7771$import$2b619be5b27ce3d0$1c7f855bfd87edc1(element) || $0a320674d802796c8732e3fc8d5b7771$import$4e3bd0330bffab4a$9099ad97b570f7c(element).position === 'fixed') return null;
    return element.offsetParent;
} // `.offsetParent` reports `null` for fixed elements, while absolute elements
// return the containing block
function $0a320674d802796c8732e3fc8d5b7771$var$getContainingBlock(element) {
    var isFirefox = navigator.userAgent.toLowerCase().indexOf('firefox') !== -1;
    var isIE = navigator.userAgent.indexOf('Trident') !== -1;
    if (isIE && $0a320674d802796c8732e3fc8d5b7771$import$2b619be5b27ce3d0$1c7f855bfd87edc1(element)) {
        // In IE 9, 10 and 11 fixed elements containing block is always established by the viewport
        var elementCss = $0a320674d802796c8732e3fc8d5b7771$import$4e3bd0330bffab4a$9099ad97b570f7c(element);
        if (elementCss.position === 'fixed') return null;
    }
    var currentNode = $0a320674d802796c8732e3fc8d5b7771$import$55e8da2e08ef22b$9099ad97b570f7c(element);
    while($0a320674d802796c8732e3fc8d5b7771$import$2b619be5b27ce3d0$1c7f855bfd87edc1(currentNode) && [
        'html',
        'body'
    ].indexOf($0a320674d802796c8732e3fc8d5b7771$import$4bdf6051907467b6$9099ad97b570f7c(currentNode)) < 0){
        var css = $0a320674d802796c8732e3fc8d5b7771$import$4e3bd0330bffab4a$9099ad97b570f7c(currentNode); // This is non-exhaustive but covers the most common CSS properties that
        // create a containing block.
        // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block
        if (css.transform !== 'none' || css.perspective !== 'none' || css.contain === 'paint' || [
            'transform',
            'perspective'
        ].indexOf(css.willChange) !== -1 || isFirefox && css.willChange === 'filter' || isFirefox && css.filter && css.filter !== 'none') return currentNode;
        else currentNode = currentNode.parentNode;
    }
    return null;
} // Gets the closest ancestor positioned element. Handles some edge cases,
function $0a320674d802796c8732e3fc8d5b7771$export$9099ad97b570f7c(element) {
    var window = $0a320674d802796c8732e3fc8d5b7771$import$f7002d1ac9f67024$9099ad97b570f7c(element);
    var offsetParent = $0a320674d802796c8732e3fc8d5b7771$var$getTrueOffsetParent(element);
    while(offsetParent && $0a320674d802796c8732e3fc8d5b7771$import$5a351e6b1aeade19$9099ad97b570f7c(offsetParent) && $0a320674d802796c8732e3fc8d5b7771$import$4e3bd0330bffab4a$9099ad97b570f7c(offsetParent).position === 'static')offsetParent = $0a320674d802796c8732e3fc8d5b7771$var$getTrueOffsetParent(offsetParent);
    if (offsetParent && ($0a320674d802796c8732e3fc8d5b7771$import$4bdf6051907467b6$9099ad97b570f7c(offsetParent) === 'html' || $0a320674d802796c8732e3fc8d5b7771$import$4bdf6051907467b6$9099ad97b570f7c(offsetParent) === 'body' && $0a320674d802796c8732e3fc8d5b7771$import$4e3bd0330bffab4a$9099ad97b570f7c(offsetParent).position === 'static')) return window;
    return offsetParent || $0a320674d802796c8732e3fc8d5b7771$var$getContainingBlock(element) || window;
}
