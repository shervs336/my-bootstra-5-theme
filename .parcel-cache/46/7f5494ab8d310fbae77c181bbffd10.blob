import   "00a52d9430873e8eb5c882ee7081db9e:../dom-utils/getBoundingClientRect.js";
import   "00a52d9430873e8eb5c882ee7081db9e:../dom-utils/getClippingRect.js";
import   "00a52d9430873e8eb5c882ee7081db9e:../dom-utils/getDocumentElement.js";
import   "00a52d9430873e8eb5c882ee7081db9e:./computeOffsets.js";
import   "00a52d9430873e8eb5c882ee7081db9e:./rectToClientRect.js";
import   "00a52d9430873e8eb5c882ee7081db9e:../enums.js";
import   "00a52d9430873e8eb5c882ee7081db9e:../dom-utils/instanceOf.js";
import   "00a52d9430873e8eb5c882ee7081db9e:./mergePaddingObject.js";
import   "00a52d9430873e8eb5c882ee7081db9e:./expandToHashMap.js";
function $00a52d9430873e8eb5c882ee7081db9e$export$9099ad97b570f7c(state, options) {
    if (options === void 0) options = {
    };
    var _options = options, _options$placement = _options.placement, placement = _options$placement === void 0 ? state.placement : _options$placement, _options$boundary = _options.boundary, boundary = _options$boundary === void 0 ? $00a52d9430873e8eb5c882ee7081db9e$import$88f92b88dee0affc$983ac427d09ca219 : _options$boundary, _options$rootBoundary = _options.rootBoundary, rootBoundary = _options$rootBoundary === void 0 ? $00a52d9430873e8eb5c882ee7081db9e$import$88f92b88dee0affc$10719bbe9c2e718 : _options$rootBoundary, _options$elementConte = _options.elementContext, elementContext = _options$elementConte === void 0 ? $00a52d9430873e8eb5c882ee7081db9e$import$88f92b88dee0affc$8fbf1c089546fa4 : _options$elementConte, _options$altBoundary = _options.altBoundary, altBoundary = _options$altBoundary === void 0 ? false : _options$altBoundary, _options$padding = _options.padding, padding = _options$padding === void 0 ? 0 : _options$padding;
    var paddingObject = $00a52d9430873e8eb5c882ee7081db9e$import$91c64118a37d671f$9099ad97b570f7c(typeof padding !== 'number' ? padding : $00a52d9430873e8eb5c882ee7081db9e$import$c111b6beb221d9c5$9099ad97b570f7c(padding, $00a52d9430873e8eb5c882ee7081db9e$import$88f92b88dee0affc$69ccf582aabcc804));
    var altContext = elementContext === $00a52d9430873e8eb5c882ee7081db9e$import$88f92b88dee0affc$8fbf1c089546fa4 ? $00a52d9430873e8eb5c882ee7081db9e$import$88f92b88dee0affc$6c351871f3b74481 : $00a52d9430873e8eb5c882ee7081db9e$import$88f92b88dee0affc$8fbf1c089546fa4;
    var referenceElement = state.elements.reference;
    var popperRect = state.rects.popper;
    var element = state.elements[altBoundary ? altContext : elementContext];
    var clippingClientRect = $00a52d9430873e8eb5c882ee7081db9e$import$ed3b18213ce0bcd9$9099ad97b570f7c($00a52d9430873e8eb5c882ee7081db9e$import$4d5facee80e07a36$91dc0a56c48748ff(element) ? element : element.contextElement || $00a52d9430873e8eb5c882ee7081db9e$import$fa3c90fcd8942cc$9099ad97b570f7c(state.elements.popper), boundary, rootBoundary);
    var referenceClientRect = $00a52d9430873e8eb5c882ee7081db9e$import$4cf85d269c78f360$9099ad97b570f7c(referenceElement);
    var popperOffsets = $00a52d9430873e8eb5c882ee7081db9e$import$5439da029c7cdc83$9099ad97b570f7c({
        reference: referenceClientRect,
        element: popperRect,
        strategy: 'absolute',
        placement: placement
    });
    var popperClientRect = $00a52d9430873e8eb5c882ee7081db9e$import$94f907fb56392282$9099ad97b570f7c(Object.assign({
    }, popperRect, popperOffsets));
    var elementClientRect = elementContext === $00a52d9430873e8eb5c882ee7081db9e$import$88f92b88dee0affc$8fbf1c089546fa4 ? popperClientRect : referenceClientRect; // positive = overflowing the clipping rect
    // 0 or negative = within the clipping rect
    var overflowOffsets = {
        top: clippingClientRect.top - elementClientRect.top + paddingObject.top,
        bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,
        left: clippingClientRect.left - elementClientRect.left + paddingObject.left,
        right: elementClientRect.right - clippingClientRect.right + paddingObject.right
    };
    var offsetData = state.modifiersData.offset; // Offsets can be applied only to the popper element
    if (elementContext === $00a52d9430873e8eb5c882ee7081db9e$import$88f92b88dee0affc$8fbf1c089546fa4 && offsetData) {
        var offset = offsetData[placement];
        Object.keys(overflowOffsets).forEach(function(key) {
            var multiply = [
                $00a52d9430873e8eb5c882ee7081db9e$import$88f92b88dee0affc$2ea344c6f4e18f30,
                $00a52d9430873e8eb5c882ee7081db9e$import$88f92b88dee0affc$4671657546f52557
            ].indexOf(key) >= 0 ? 1 : -1;
            var axis = [
                $00a52d9430873e8eb5c882ee7081db9e$import$88f92b88dee0affc$7cbaf698fabef892,
                $00a52d9430873e8eb5c882ee7081db9e$import$88f92b88dee0affc$4671657546f52557
            ].indexOf(key) >= 0 ? 'y' : 'x';
            overflowOffsets[key] += offset[axis] * multiply;
        });
    }
    return overflowOffsets;
}
